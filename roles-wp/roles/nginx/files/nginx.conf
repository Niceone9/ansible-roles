#定义 Nginx 运行的用户和用户组
user nobody nobody;
#启动进程,通常设置成和 cpu 的数量相等
worker_processes 2;

worker_rlimit_nofile 102400;
#该指令是当一个 nginx 进程打开的最多文件描述符数目，最好与 ulimit -n 的值保持一致。

error_log /usr/local/nginx/logs/error.log;
#错误日志定义等级， [ debug | info | notice | warn | error | crit ]

pid /usr/local/nginx/nginx.pid;

#工作模式及连接数上限
events {
    use epoll;
    worker_connections 102400;
    #单个后台 worker process 进程的最大并发链接数 （最大连接数=连接数*进程数）
    multi_accept on;
    #尽可能多的接受请求.
} 

http {
    include mime.types;
    default_type application/octet-stream;
    access_log /usr/local/nginx/logs/access.log;

    sendfile on;

    tcp_nopush on;
    #防止网络阻塞

    keepalive_timeout 60;
    #keepalive 超时时间， 客户端到服务器端的连接持续有效时间，当出现对服务器的后继请求时， keepalive-timeout 功能可避免建立或重新建立连接。

    tcp_nodelay on;
    #提高数据的实时响应性

    #开启 gzip 压缩
    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.1;
    gzip_comp_level 3;
    #压缩级别大小,最大为9。值越小,压缩后比例越小,CPU 处理更快。值越大,消耗 CPU 比较高。
    gzip_types text/plain application/x-javascript text/css
    application/xml;
    gzip_vary on;

    client_max_body_size 10m;
    #允许客户端请求的最大单文件字节数

    client_body_buffer_size 128k;
    #缓冲区代理缓冲用户端请求的最大字节数.

    proxy_connect_timeout 90;
    #nginx 跟后端服务器连接超时时间(代理连接超时)

    proxy_send_timeout 90;
    #后端服务器数据回传时间(代理发送超时)

    proxy_read_timeout 90;
    #连接成功后，后端服务器响应时间(代理接收超时)

    proxy_buffer_size 4k;
    #设置代理服务器（nginx）保存用户头信息的缓冲区大小

    proxy_buffers 4 32k;
    #proxy_buffers 4个缓冲区，每个缓存区32K。适合网页平均在 32k 以下

    proxy_busy_buffers_size 64k;
    #高负荷下缓冲大小（proxy_buffers*2）

    #设定请求缓冲
    large_client_header_buffers 4 4k;
    client_header_buffer_size 4k;
    #客户端请求头部的缓冲区大小，这个可以根据系统分页大小来设置，一般一个请求的头部大小不会超过 1k
    #不过由于一般系统分页都要大于 1k，所以这里设置为分页大小。分页大小可以用命令getconf PAGESIZE 取得。

    open_file_cache max=102400 inactive=20s;
    #这个将为打开文件指定缓存，默认是没有启用的， max 指定缓存数量，建议和打开文件数一致， inactive 是指经过多长时间文件没被请求后删除缓存。

    open_file_cache_valid 30s;
    #这个是指多长时间检查一次缓存的有效信息。

    open_file_cache_min_uses 1;
    #open_file_cache 指令中的 inactive 参数时间内文件的最少使用次数，如果超过这个数字，文件描述符一直是在缓存中打开的。

    server_tokens off;
    #隐藏版本号
    include ../vhost/*.conf;
}
